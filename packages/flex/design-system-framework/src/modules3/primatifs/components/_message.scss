@use "../utilities/variables";
@use "../utilities/mixins";
@use "../utilities/vendors/bulma-extensions/utilities/functions.sass" as fn_sass;

$message-background-color: variables.$background !default;
$message-radius: variables.$radius !default;

$message-header-background-color: variables.$text !default;
$message-header-color: variables.$text-invert !default;
$message-header-weight: variables.$weight-bold !default;
$message-header-padding: 0.75em 1em !default;
$message-header-radius: variables.$radius !default;

$message-body-border-color: variables.$border !default;
$message-body-border-width: 0 0 0 4px !default;
$message-body-color: variables.$text !default;
$message-body-padding: 1.25em 1.5em !default;
$message-body-radius: variables.$radius !default;

$message-body-pre-background-color: variables.$white !default;
$message-body-pre-code-background-color: transparent !default;

$message-header-body-border-width: 0 !default;

.message {
    @include mixins.block;

    background-color: var(--flex-message-background-color, #{$message-background-color});
    border-radius: $message-radius;
    font-size: variables.$size-normal;

    strong {
        color: currentColor;
    }

    a:not(.button):not(.tag) {
        color: currentColor;
        text-decoration: underline;
    }

    // Sizes
    &.is-small {
        font-size: variables.$size-small;
    }

    &.is-medium {
        font-size: variables.$size-medium;
    }

    &.is-large {
        font-size: variables.$size-large;
    }

    // Colors
    @each $name, $pair in variables.$colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);
        $color-lightning: max(100% - lightness($color) - 2%, 0%);
        $color-luminance: fn_sass.colorLuminance($color);
        $darken-percentage: $color-luminance * 70%;
        $desaturate-percentage: $color-luminance * 30%;

        &.is-#{$name} {
            background-color: lighten($color, $color-lightning);

            .message-header {
                background-color: var(#{'--flex-'}#{$name}, #{$color});
                // color: var(--flex-color-invert, #{variables.$color-invert});
                color: var(#{'--flex-'}#{$name}#{'-invert'}, #{$color-invert});
            }

            .message-body {
                border-color: var(#{'--flex-'}#{$name}, #{$color});
                color: desaturate(darken($color, $darken-percentage), $desaturate-percentage);
            }
        }
    }
}

.message-header {
    align-items: center;
    background-color: var(--flex-message-header-background-color, #{$message-header-background-color});
    border-radius: $message-header-radius $message-header-radius 0 0;
    color: var(--flex-message-header-color, #{$message-header-color});
    display: flex;
    font-weight: $message-header-weight;
    justify-content: space-between;
    line-height: 1.25;
    padding: $message-header-padding;
    position: relative;

    .delete {
        flex-grow: 0;
        flex-shrink: 0;
        margin-left: 0.75em;
    }

    & + .message-body {
        border-width: $message-header-body-border-width;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
    }
}

.message-body {
    border-color: var(--flex-message-body-border-color, #{$message-body-border-color});
    border-radius: $message-body-radius;
    border-style: solid;
    border-width: $message-body-border-width;
    color: var(--flex-message-body-color, #{$message-body-color});
    padding: $message-body-padding;

    code,
    pre {
        background-color: var(--flex-message-body-pre-background-color, #{$message-body-pre-background-color});
    }

    pre code {
        background-color: var(--flex-message-body-pre-code-background-color, #{$message-body-pre-code-background-color});
    }
}
