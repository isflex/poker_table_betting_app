import React, { useState, useEffect } from 'react'
import { StyleSheet, TouchableOpacity } from 'react-native'
import { OptionsItemProps } from './OptionsItemProps'
import { nanoid } from 'nanoid'
import { Text } from '../../'

/**
 * Options Item Component
 * @param id {string} Id for Options Item - Default id generated by default
 * @param disabled {boolean} Disabled Options Item
 * @param name {string} Options Item name
 * @param value {string} Value for options item
 * @param checked {boolean} Checked options item
 * @param label {string} Label for options item
 * @param readonly {boolean} readonly options item
 * @param onChange {onChange} onChange Event
 * @param onClick {onClick} onClick Event
 */
const OptionsItem = ({
  id = nanoid(),
  disabled,
  name,
  value,
  checked,
  label,
  readonly,
  onClick,
  onChange,
  ...others
}: OptionsItemProps): React.JSX.Element => {
  const [_checked, setChecked] = useState<string>(String(checked) || '')
  const selectedColor = '#109db9'
  const disabledColor = 'hsla(0,0%,70.2%,.7)'

  const styles = StyleSheet.create({
    selectItem: {
      borderColor: _checked === value ? selectedColor : disabledColor,
      borderWidth: 2,
      padding: 6,
      paddingLeft: 13,
      paddingRight: 13,
      height: 35,
      borderRadius: 4,
      marginRight: 10,
    },
    text: {
      color: _checked === value ? selectedColor : disabledColor,
      fontSize: 14,
      fontWeight: '600',
    },
  })

  useEffect(() => {
    setChecked(checked || '')
  }, [checked])

  const handleClick = (value: string) => {
    if (!readonly) {
      setChecked(value)
      if (onClick) {
        onClick({
          optionId: id,
          optionValue: value,
          optionName: name || '',
          optionChecked: !_checked,
        })
      }
      if (onChange) {
        onChange({
          optionId: id,
          optionValue: value,
          optionName: name || '',
          optionChecked: !_checked,
        })
      }
    }
  }

  return (
    <TouchableOpacity
      accessibilityLabel={label}
      onPress={() => handleClick(value || '')}
      disabled={disabled}
      style={styles.selectItem}
      {...others}
    >
      <Text style={styles.text}>{label}</Text>
    </TouchableOpacity>
  )
}

export default OptionsItem
